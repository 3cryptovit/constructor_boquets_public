import pool from './database/db.js';

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
 */
const fixDatabase = async () => {
  console.log('üîß –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É orders
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—è—é —Ç–∞–±–ª–∏—Ü—É orders...');
    await fixOrdersTable();

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥—Ä—É–≥–∏—Ö –≤–∞–∂–Ω—ã—Ö –ø–æ–ª–µ–π
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—è—é –¥—Ä—É–≥–∏–µ —Ç–∞–±–ª–∏—Ü—ã...');
    await fixOtherTables();

    console.log('\n‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!');
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await pool.end();
    console.log('\nüëã –†–∞–±–æ—Ç–∞ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
  }
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã orders
 */
const fixOrdersTable = async () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü—ã orders
    const tableExists = await pool.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'orders'
      );
    `);

    if (!tableExists.rows[0].exists) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ orders –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');

      // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É orders –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      await pool.query(`
        CREATE TABLE orders (
          id SERIAL PRIMARY KEY,
          user_id INTEGER NOT NULL,
          status VARCHAR(50) DEFAULT 'pending',
          total_price DECIMAL(10, 2) DEFAULT 0,
          created_at TIMESTAMP DEFAULT NOW()
        );
      `);
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ orders —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è created_at
    const hasCreatedAt = await pool.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.columns 
        WHERE table_name = 'orders' 
        AND column_name = 'created_at'
      );
    `);

    if (!hasCreatedAt.rows[0].exists) {
      console.log('‚ùå –ü–æ–ª–µ created_at –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ orders');
      await pool.query(`
        ALTER TABLE orders 
        ADD COLUMN created_at TIMESTAMP DEFAULT NOW();
      `);
      console.log('‚úÖ –ü–æ–ª–µ created_at —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É orders');
    } else {
      console.log('‚úì –ü–æ–ª–µ created_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ orders');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è total_price
    const hasTotalPrice = await pool.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.columns 
        WHERE table_name = 'orders' 
        AND column_name = 'total_price'
      );
    `);

    if (!hasTotalPrice.rows[0].exists) {
      console.log('‚ùå –ü–æ–ª–µ total_price –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ orders');
      await pool.query(`
        ALTER TABLE orders 
        ADD COLUMN total_price DECIMAL(10, 2) DEFAULT 0;
      `);
      console.log('‚úÖ –ü–æ–ª–µ total_price —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É orders');
    } else {
      console.log('‚úì –ü–æ–ª–µ total_price —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ orders');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è status
    const hasStatus = await pool.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.columns 
        WHERE table_name = 'orders' 
        AND column_name = 'status'
      );
    `);

    if (!hasStatus.rows[0].exists) {
      console.log('‚ùå –ü–æ–ª–µ status –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ orders');
      await pool.query(`
        ALTER TABLE orders 
        ADD COLUMN status VARCHAR(50) DEFAULT 'pending';
      `);
      console.log('‚úÖ –ü–æ–ª–µ status —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É orders');
    } else {
      console.log('‚úì –ü–æ–ª–µ status —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ orders');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã orders:', error);
    throw error;
  }
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ç–∞–±–ª–∏—Ü
 */
const fixOtherTables = async () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü—ã order_items
    const orderItemsExists = await pool.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'order_items'
      );
    `);

    if (!orderItemsExists.rows[0].exists) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ order_items –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');

      // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É order_items –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      await pool.query(`
        CREATE TABLE order_items (
          id SERIAL PRIMARY KEY,
          order_id INTEGER NOT NULL,
          bouquet_id INTEGER NOT NULL,
          quantity INTEGER DEFAULT 1,
          price DECIMAL(10, 2) DEFAULT 0
        );
      `);
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ order_items —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
    } else {
      console.log('‚úì –¢–∞–±–ª–∏—Ü–∞ order_items —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è price –≤ order_items
      const hasPrice = await pool.query(`
        SELECT EXISTS (
          SELECT FROM information_schema.columns 
          WHERE table_name = 'order_items' 
          AND column_name = 'price'
        );
      `);

      if (!hasPrice.rows[0].exists) {
        console.log('‚ùå –ü–æ–ª–µ price –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ order_items');
        await pool.query(`
          ALTER TABLE order_items 
          ADD COLUMN price DECIMAL(10, 2) DEFAULT 0;
        `);
        console.log('‚úÖ –ü–æ–ª–µ price —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É order_items');
      } else {
        console.log('‚úì –ü–æ–ª–µ price —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ order_items');
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –¥—Ä—É–≥–∏—Ö —Ç–∞–±–ª–∏—Ü:', error);
    throw error;
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–î
fixDatabase().catch(console.error);